/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.semi.view;

import com.semi.person.model.PersonDAO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author pjm02
 */
public class SubUserid extends javax.swing.JFrame implements ActionListener{
    private MemberFrame memberFrame;
    
    /**
     * Creates new form SubUserid
     */
    public SubUserid() {
        initComponents();
        
        init();
        addEvent();
    }
    
    public SubUserid(MemberFrame memberFrame) {
        this();
        
        this.memberFrame = memberFrame;
        tfUserid.setText(memberFrame.tfUserid.getText());
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbIdCheck = new javax.swing.JLabel();
        tfUserid = new javax.swing.JTextField();
        btDup = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbIdCheck.setText("아이디");

        btDup.setText("아이디 확인");
        btDup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(lbIdCheck)
                .addGap(18, 18, 18)
                .addComponent(tfUserid, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btDup)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbIdCheck)
                    .addComponent(tfUserid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btDup, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btDupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btDupActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubUserid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubUserid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubUserid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubUserid.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SubUserid().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDup;
    private javax.swing.JLabel lbIdCheck;
    private javax.swing.JTextField tfUserid;
    // End of variables declaration//GEN-END:variables

    private void init() {
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
    
    private void addEvent() {
        btDup.addActionListener(this);
        tfUserid.addActionListener(this);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==btDup || e.getSource()==tfUserid) {
            try {
                duplicatedld();
            }catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }

    private void duplicatedld() throws SQLException {
        String userid = tfUserid.getText();
        if(userid==null || userid.isEmpty()) {
            JOptionPane.showMessageDialog(this, "아이디를 입력하세요");
            tfUserid.requestFocus();
            return;
        }
        
        PersonDAO personDao = new PersonDAO();
        int result = personDao.idChecked(userid);
        
        
        System.out.println("result=" + result+"unusasble_id="+PersonDAO.UNUSASBLE_ID+"사용가능="+PersonDAO.USASBLE_ID);
        if(result==PersonDAO.USASBLE_ID) { 
            int type = JOptionPane.showConfirmDialog(this, "사용가능한 아이디입니다." 
                                     + ", 사용하시겠습니까?", "아이디 확인", JOptionPane.YES_NO_OPTION);
            if(type==JOptionPane.YES_OPTION) {
                memberFrame.tfUserid.setText(userid);
                
                memberFrame.setIdChecked(true);
                
                this.dispose();
            }
        }else if(result==PersonDAO.UNUSASBLE_ID) { 
            JOptionPane.showMessageDialog(this, "해당 아이디가 이미 존재합니다."
                                               + "다른 아이디를 입력하세요");
        }else {
            JOptionPane.showMessageDialog(this, "아이디 중복확인 실패!");
        }
    }
}
