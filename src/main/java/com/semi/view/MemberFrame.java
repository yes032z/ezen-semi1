/*
* Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
* Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
*/
package com.semi.view;

import com.semi.animaltype.model.AnimalTypeDAO;
import com.semi.person.model.PersonDAO;
import com.semi.person.model.PersonDTO;
import com.semi.pet.model.PetDAO;
import com.semi.pet.model.PetDTO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author ezen
 */
public class MemberFrame extends javax.swing.JFrame implements ActionListener{
    private int personFlag;
    private LoginGUI loginGUI;
    private PersonDAO personDao;
    private boolean idChecked;
    private boolean nickChecked;
    private String[] arrEmail2 = {"naver.com", "nate.com", "daum.net", "gmail.com", "직접입력"};
    private PetDAO petDao;
    
    /**
     * Creates new form MemberFrameTest
     */
    public MemberFrame() {
        initComponents();
        
        init();
        addEvent();
    }
    
    public MemberFrame(int flag, LoginGUI longGUI) {
        this();
        this.loginGUI = longGUI;
        this.personFlag=flag;
    }
    
    public boolean isIdChecked() {
        return idChecked;
    }
    
    public void setIdChecked(boolean idChecked) {
        this.idChecked = idChecked;
    }
    
    public boolean isNickChecked() {
        return nickChecked;
    }
    
    public void setNickChecked(boolean nickChecked) {
        this.nickChecked = nickChecked;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLbel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cbAniType = new javax.swing.JComboBox<>();
        cbAniKinds = new javax.swing.JComboBox<>();
        tfPetName = new javax.swing.JTextField();
        cbPetGender = new javax.swing.JComboBox<>();
        cbNeut = new javax.swing.JComboBox<>();
        tfPetWeight = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        cbPetYear = new javax.swing.JComboBox<>();
        cbPetMonth = new javax.swing.JComboBox<>();
        cbPetDate = new javax.swing.JComboBox<>();
        tfFeed = new javax.swing.JTextField();
        tfAllergy = new javax.swing.JTextField();
        btCancel = new javax.swing.JButton();
        tfDetailAddress = new javax.swing.JTextField();
        tfAddress = new javax.swing.JTextField();
        tfZipcode = new javax.swing.JTextField();
        btZipcode = new javax.swing.JButton();
        tfNickname = new javax.swing.JTextField();
        btNickCheck = new javax.swing.JButton();
        cbPsYear = new javax.swing.JComboBox<>();
        cbPsMonth = new javax.swing.JComboBox<>();
        cbPsDate = new javax.swing.JComboBox<>();
        tfPwd = new javax.swing.JPasswordField();
        tfName = new javax.swing.JTextField();
        btIdCheck = new javax.swing.JButton();
        tfUserid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbhp1 = new javax.swing.JComboBox<>();
        tfhp2 = new javax.swing.JTextField();
        tfhp3 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        tfEmail1 = new javax.swing.JTextField();
        cbEmail2 = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        tfEmail3 = new javax.swing.JTextField();
        btRegister = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("회원가입");

        jLabel1.setText("비밀번호");

        jLbel2.setText("아이디");

        jLabel3.setText("이름");

        jLabel4.setText("생년월일");

        jLabel5.setText("닉네임");

        jLabel6.setText("상세주소");

        jLabel7.setText("우편번호");

        jLabel8.setText("주소");

        jLabel11.setFont(new java.awt.Font("맑은 고딕", 0, 24)); // NOI18N
        jLabel11.setText("회원 정보");

        jLabel9.setText("이름");

        jLabel13.setText("성별");

        jLabel14.setText("생일");

        jLabel15.setText("몸무게");

        jLabel16.setText("중성화 여부");

        jLabel17.setText("먹는 사료");

        jLabel20.setText("알러지");

        jLabel21.setText("묘/견종");

        cbAniType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "강아지", "고양이" }));

        cbPetGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "암컷", "수컷" }));

        cbNeut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "O", "X" }));

        jLabel22.setText("Kg");

        cbPetYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023" }));

        cbPetMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        cbPetDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel20)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbNeut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPetGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbPetYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbPetMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbPetDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbAniType, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbAniKinds, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tfPetName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfPetWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22))
                    .addComponent(tfFeed, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                    .addComponent(tfAllergy))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tfPetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(cbPetGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(cbPetYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPetMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPetDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(tfPetWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(cbNeut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfFeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfAllergy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbAniType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAniKinds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btCancel.setText("취소");

        btZipcode.setText("우편번호 찾기");

        btNickCheck.setText("중복확인");

        cbPsYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007" }));

        cbPsMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        cbPsDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        btIdCheck.setText("중복확인");

        jLabel2.setText("전화번호");

        cbhp1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "010", "011", "016", "017", "018", "019" }));

        jLabel23.setText("-");

        jLabel24.setText("-");

        jLabel12.setFont(new java.awt.Font("맑은 고딕", 0, 24)); // NOI18N
        jLabel12.setText("반려동물 정보");

        jLabel18.setText("이메일");

        cbEmail2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "naver.com", "nate.com", "daum.net", "gmail.com", "직접입력" }));

        jLabel19.setText("@");

        btRegister.setText("회원가입");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(btRegister)
                        .addGap(18, 18, 18)
                        .addComponent(btCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLbel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel18))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btZipcode))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(tfEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(cbEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(cbPsYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbPsMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbPsDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfEmail3))
                                    .addComponent(tfDetailAddress)
                                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfNickname, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btNickCheck))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfUserid, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btIdCheck))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbhp1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel23)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfhp2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel24)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfhp3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(46, 46, 46)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(506, 506, 506)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tfNickname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btNickCheck))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLbel2)
                            .addComponent(tfUserid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btIdCheck))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbhp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfhp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfhp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(tfEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(tfEmail3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cbPsYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbPsMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbPsDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btZipcode)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tfDetailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemberFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemberFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemberFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemberFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemberFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btIdCheck;
    private javax.swing.JButton btNickCheck;
    private javax.swing.JButton btRegister;
    private javax.swing.JButton btZipcode;
    private javax.swing.JComboBox<String> cbAniKinds;
    private javax.swing.JComboBox<String> cbAniType;
    private javax.swing.JComboBox<String> cbEmail2;
    private javax.swing.JComboBox<String> cbNeut;
    private javax.swing.JComboBox<String> cbPetDate;
    private javax.swing.JComboBox<String> cbPetGender;
    private javax.swing.JComboBox<String> cbPetMonth;
    private javax.swing.JComboBox<String> cbPetYear;
    private javax.swing.JComboBox<String> cbPsDate;
    private javax.swing.JComboBox<String> cbPsMonth;
    private javax.swing.JComboBox<String> cbPsYear;
    private javax.swing.JComboBox<String> cbhp1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLbel2;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JTextField tfAddress;
    private javax.swing.JTextField tfAllergy;
    private javax.swing.JTextField tfDetailAddress;
    public javax.swing.JTextField tfEmail1;
    private javax.swing.JTextField tfEmail3;
    private javax.swing.JTextField tfFeed;
    private javax.swing.JTextField tfName;
    public static javax.swing.JTextField tfNickname;
    private javax.swing.JTextField tfPetName;
    private javax.swing.JTextField tfPetWeight;
    private javax.swing.JPasswordField tfPwd;
    public javax.swing.JTextField tfUserid;
    public javax.swing.JTextField tfZipcode;
    private javax.swing.JTextField tfhp2;
    private javax.swing.JTextField tfhp3;
    // End of variables declaration//GEN-END:variables
    
    private void init() {
        personDao = new PersonDAO();
        petDao = new PetDAO ();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        //번호 앞자리
        String[] hpList = {"010", "011", "016", "017", "018", "019"};
        DefaultComboBoxModel<String> cmodel = new DefaultComboBoxModel<>(hpList);
        cbhp1.setModel(cmodel);
        
        //이메일 뒷자리
        DefaultComboBoxModel<String> cmodel2 = new DefaultComboBoxModel<>(arrEmail2);
        cbEmail2.setModel(cmodel2);
        
        tfEmail3.setEnabled(false);
        
        //생년월일
        //년
        String[] yearList = new String[101];
        for(int i=0; i<=100; i++) {
            yearList[i] = 2023-i+"";
        }
        DefaultComboBoxModel<String> cmodel3 = new DefaultComboBoxModel<>(yearList);
        cbPsYear.setModel(cmodel3);
        //월
        String[] monthList = new String[12];
        for(int i=0; i<monthList.length; i++) {
            if(i<9) {
                monthList[i] = "0"+(i+1);
            }else {
                monthList[i] = i+1+"";
            }
        }
        DefaultComboBoxModel<String> cmodel4 = new DefaultComboBoxModel<>(monthList);
        cbPsMonth.setModel(cmodel4);
        //일
        String[] dayList = new String[31];
        for(int i=0; i<dayList.length; i++) {
            if(i<9) {
                dayList[i] = "0"+(i+1);
            }else{
                dayList[i] = i+1+"";
            }
        }
        DefaultComboBoxModel<String> cmodel8 = new DefaultComboBoxModel<>(dayList);
        cbPsDate.setModel(cmodel8);
        
        //견/묘 선택
        String[] CDList = {"강아지", "고양이"};
        DefaultComboBoxModel<String> cmodel5 = new DefaultComboBoxModel<>(CDList);
        cbAniType.setModel(cmodel5);
        
        try {
            aniselect();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
        //우편번호 직접 입력 x
        tfZipcode.setEnabled(false);
    }
    
    
    private void addEvent() {
        tfName.addActionListener(this);
        tfNickname.addActionListener(this);
        btNickCheck.addActionListener(this);
        tfUserid.addActionListener(this);
        btIdCheck.addActionListener(this);
        tfPwd.addActionListener(this);
        cbhp1.addItemListener(new EventHandler());
        tfhp2.addActionListener(this);
        tfhp3.addActionListener(this);
        tfEmail1.addActionListener(this);
        cbEmail2.addItemListener(new EventHandler());
        tfEmail3.addActionListener(this);
        cbPsYear.addItemListener(new EventHandler());
        cbPsMonth.addItemListener(new EventHandler());
        cbPsDate.addItemListener(new EventHandler());
        btZipcode.addActionListener(this);
        tfDetailAddress.addActionListener(this);
        
        tfPetName.addActionListener(this);
        cbPetGender.addItemListener(new EventHandler());
        cbPetYear.addItemListener(new EventHandler());
        cbPetMonth.addItemListener(new EventHandler());
        cbPetDate.addItemListener(new EventHandler());
        tfPetWeight.addActionListener(this);
        cbNeut.addActionListener(this);
        tfFeed.addActionListener(this);
        tfAllergy.addActionListener(this);
        cbAniType.addItemListener(new EventHandler());
        cbAniKinds.addItemListener(new EventHandler());
        
        btRegister.addActionListener(this);
        btCancel.addActionListener(this);
    }
    
    
    
    class EventHandler implements ItemListener{
        
        @Override
        public void itemStateChanged(ItemEvent e) {
            if(e.getStateChange()==ItemEvent.SELECTED) {
                System.out.println("1. 선택된 항목 : " + e.getItem());
                System.out.println("2. 선택된 항목 : " + cbEmail2.getSelectedItem()
                        + ", index = " + cbEmail2.getSelectedIndex());
                
                if(e.getItem().equals("직접입력")) {
                    tfEmail3.setEnabled(true);
                    tfEmail3.requestFocus();
                }else {
                    tfEmail3.setEnabled(false);
                    tfEmail3.setText("");
                }
            }else if(e.getSource()==cbAniType) {
                try {
                    aniselect();
                } catch (SQLException ex) {
                    Logger.getLogger(MemberFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else if(e.getSource()==cbPsMonth) {
                setDay();//일
            }
        }
        
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==btRegister) {
            try {
                personAdd();
                petAdd();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }else if(e.getSource()==btNickCheck){
            SubNickname f =new SubNickname(this);
            f.setVisible(true);
        }else if(e.getSource()==btIdCheck) {
            SubUserid f = new SubUserid(this);
            f.setVisible(true);
        }else if(e.getSource()==btZipcode) {
            ZipcodeGUI f = new ZipcodeGUI(this);
            f.setVisible(true);
        }else if(e.getSource()==btCancel) {
            this.dispose();
        }
    }
    
    private void aniselect() throws SQLException {
        AnimalTypeDAO animalTypeDao = new AnimalTypeDAO();
        
        try {
            String type = "";
            String str = (String)cbAniType.getSelectedItem();
            if(str.equals("고양이")) {
                type = "C";
            }else{
                type = "D";
            }
            String[] animalKindsList = animalTypeDao.getAnimalTypeList(type);
            DefaultComboBoxModel<String> cmodel = new DefaultComboBoxModel<>(animalKindsList);
            cbAniKinds.setModel(cmodel);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
    }
    
    
    private void personAdd() throws SQLException {
        String name = tfName.getText();
        String nickName = tfNickname.getText();
        String userid = tfUserid.getText();
        String pwd = tfPwd.getText();
        String hp1 = (String)cbhp1.getSelectedItem();
        String hp2 = tfhp2.getText();
        String hp3 = tfhp3.getText();
        String email1 = tfEmail1.getText();
        String email2 = (String)cbEmail2.getSelectedItem();
        String email3 = tfEmail3.getText();
        String psYear = (String)cbPsYear.getSelectedItem();
        String psMonth = (String)cbPsMonth.getSelectedItem();
        String psDate = (String)cbPsDate.getSelectedItem();
        String zipno = tfZipcode.getText();
        String address = tfAddress.getText();
        String detailAddress = tfDetailAddress.getText();
        
        if(name==null || name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "이름을 입력하세요");
            tfName.requestFocus();
            return;
        }else if(nickName==null || nickName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "닉네임을 입력하세요");
            tfNickname.requestFocus();
            return;
        }else if(!isNickChecked()) {
            JOptionPane.showMessageDialog(this, "닉네임 중복확인을 하세요");
            btNickCheck.requestFocus();
            return;
        }else if(userid==null || userid.isEmpty()) {
            JOptionPane.showMessageDialog(this, "아이디를 입력하세요");
            tfUserid.requestFocus();
            return;
        }else if(!isIdChecked()) {
            JOptionPane.showMessageDialog(this, "아이디 중복확인을 하세요");
            btIdCheck.requestFocus();
            return;
        }else if(pwd==null || pwd.isEmpty()) {
            JOptionPane.showMessageDialog(this, "비밀번호를 입력하세요");
            tfPwd.requestFocus();
            return;
        }else if(hp2==null || hp2.isEmpty() && hp3==null || hp3.isEmpty()) {
            JOptionPane.showMessageDialog(this, "전화번호를 입력하세요");
            tfhp2.requestFocus();
            return;
        }else if(email1==null || email1.isEmpty()) {
            JOptionPane.showMessageDialog(this, "이메일 입력하세요");
            tfEmail1.requestFocus();
            return;
        }else if(zipno==null || zipno.isEmpty()) {
            JOptionPane.showMessageDialog(this, "주소를 입력하세요");
            tfZipcode.requestFocus();
            return;
        }
        
        String hp = "";
        if(hp2!=null && !hp2.isEmpty() && hp3!=null && !hp3.isEmpty()) {
            hp = hp1 + "-" + hp2 + "-" + hp3;
        }
        
        String email = "";
        if(email1 != null && !email1.isEmpty()) {
            if(email2.equals("직접입력")){
                if(email3 != null && !email3.isEmpty()) {
                    email = email1 + "@" + email3;
                }
            }else{
                email = email1 + "@" + email2;
            }
        }
        
        String birth = "";
        if(psYear != null && !psYear.isEmpty() && psMonth != null && !psMonth.isEmpty() && psDate != null && !psDate.isEmpty()) {
            birth = psYear + psMonth + psDate;
        }
        
        PersonDTO dto = new PersonDTO();
        dto.setName(name);
        dto.setNickname(nickName);
        dto.setId(userid);
        dto.setPwd(pwd);
        dto.setHp(hp);
        dto.setEmail(email);
        dto.setBirth(birth);
        dto.setZipno(Integer.parseInt(zipno));
        dto.setDetailaddress(detailAddress);
        
        int cnt = personDao.insertPerson(dto);
        
        if(cnt>0) {
            JOptionPane.showMessageDialog(this, "회원가입되었습니다.");
            this.dispose();
            
            LoginGUI.tfUserid.setText(tfUserid.getText());
        }else {
            JOptionPane.showMessageDialog(this, "회원가입 실패!");
        }
    }
    
    
    private void petAdd() throws SQLException{
        String petName = tfPetName.getText();
        String petGender = (String)cbPetGender.getSelectedItem();
        String petYear = (String)cbPetYear.getSelectedItem();
        String petMonth = (String)cbPetMonth.getSelectedItem();
        String petDate = (String)cbPetDate.getSelectedItem();
        Double petWeight = Double.parseDouble(tfPetWeight.getText());
        String neut = (String)cbNeut.getSelectedItem();
        String feed = tfFeed.getText();
        String allergy = tfAllergy.getText();
        String anyType = (String)cbAniType.getSelectedItem();
        String anyKinds = (String)cbAniKinds.getSelectedItem();
        
        
        String petBirth = "";
        if(petYear != null && !petYear.isEmpty() && petMonth != null && !petMonth.isEmpty() && petDate != null && !petDate.isEmpty()) {
            petBirth = petYear + "-" + petMonth + "-" + petDate;
        }
        
        String petType = "";
        if(anyType != null && !anyType.isEmpty() && anyKinds != null && !anyKinds.isEmpty()) {
            petType = anyType + " / " + anyKinds;
        }
        
        PetDTO pdto = new PetDTO();
        pdto.setPetname(petName);
        pdto.setGender(petGender);
        pdto.setPetbirth(petBirth);
        pdto.setWeight(petWeight);
        pdto.setNeut(neut);
        pdto.setFeed(feed);
        pdto.setAllergy(allergy);
        
        int cnt = petDao.insertPet(pdto);
        
        if(cnt>0) {
            JOptionPane.showMessageDialog(this, "회원가입되었습니다.");
            this.dispose();
            
            LoginGUI.tfUserid.setText(tfUserid.getText());
        }else {
            JOptionPane.showMessageDialog(this, "회원가입 실패!");
        }
        
    }
    
    private void setDay() {
        String month = (String)cbPsMonth.getSelectedItem();
        if(month.equals("01") || month.equals("03") || month.equals("05") || month.equals("07") ||
                month.equals("08") || month.equals("10") || month.equals("12")){
            String[] day1List = new String[31];
            for(int i=0; i<day1List.length; i++) {
                if(i<9) {
                    day1List[i] = "0"+(i+1);
                }else{
                    day1List[i] = i+1+"";
                }
            }
            DefaultComboBoxModel<String> cmodel5 = new DefaultComboBoxModel<>(day1List);
            cbPsDate.setModel(cmodel5);
        }else if(month.equals("04") || month.equals("06") || month.equals("09") || month.equals("11")) {
            String[] day2List = new String[30];
            for(int i=0; i<day2List.length; i++) {
                if(i<9) {
                    day2List[i] = "0"+(i+1);
                }else{
                    day2List[i] = i+1+"";
                }
            }
            DefaultComboBoxModel<String> cmodel6 = new DefaultComboBoxModel<>(day2List);
            cbPsDate.setModel(cmodel6);
        }else{
            String[] day3List = new String[29];
            for(int i=0; i<day3List.length; i++) {
                if(i<9) {
                    day3List[i] = "0"+(i+1);
                }else{
                    day3List[i] = i+1+"";
                }
            }
            DefaultComboBoxModel<String> cmodel7 = new DefaultComboBoxModel<>(day3List);
            cbPsDate.setModel(cmodel7);
        }
    }
    
}
